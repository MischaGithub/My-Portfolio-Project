{"version":3,"sources":["components/pages/homepage.js","components/pages/projects.js","components/pages/testimonals.js","components/pages/about.js","components/pages/contact.js","components/pages/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","col","src","alt","className","id","contenteditable","spellcheck","href","rel","target","aria-hidden","Component","Projects","props","state","activeTab","this","onChange","tabId","setState","ripple","toggleCategories","Testimonals","About","Contact","Main","exact","path","component","Home","Aboutme","ContactMe","App","style","height","background","attachment","position","transparent","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.028129bf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Cell col={12}>\r\n          <img\r\n            src=\"https://guillaumebreux.com/avatar.png\"\r\n            alt=\"avatar\"\r\n            className=\"avatar-img\"\r\n          />\r\n          <div id=\"text\" contenteditable spellcheck=\"false\">\r\n            <p>Full Stack Developer</p>\r\n\r\n            <p> JavaScript | React | Python | MySQL </p>\r\n\r\n            <br />\r\n            <div className=\"social-links\">\r\n              {/* LinkedId */}\r\n              <a\r\n                href=\"http://google.com\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n              </a>\r\n              {/* Github */}\r\n              <a\r\n                href=\"http://google.com\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n              </a>\r\n              {/* Codepen*/}\r\n              <a\r\n                href=\"http://google.com\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"fa fa-codepen\" aria-hidden=\"true\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </Cell>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\nimport { Tabs, Tab, Grid, Cell } from \"react-mdl\";\r\n\r\nclass Projects extends Component {\r\n  constructor(props, state) {\r\n    super(props);\r\n    this.state = { activeTab: 0 };\r\n  }\r\n\r\n  toggleCategories() {\r\n    // Toggle State\r\n    if (this.state.activeTab === 0) {\r\n      return (\r\n        <div>\r\n          <h1>This is React</h1>\r\n        </div>\r\n      );\r\n    } else if (this.state.activeTab === 1) {\r\n      return (\r\n        <div>\r\n          <h1>This is Python</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"category-tabs\">\r\n        <Tabs\r\n          activeTab={this.state.activeTab}\r\n          onChange={(tabId) => this.setState({ activeTab: tabId })}\r\n          ripple\r\n        >\r\n          <Tab>React</Tab>\r\n          <Tab>Python</Tab>\r\n        </Tabs>\r\n\r\n        <section className=\"projects-grid\">\r\n          <Grid className=\"project-grid\">\r\n            <Cell col={4}>\r\n              <div className=\"content\">{this.toggleCategories()}</div>\r\n            </Cell>\r\n          </Grid>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Testimonals extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Testimonals</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Testimonals;\r\n","import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Let's Talk</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"../pages/homepage\";\r\nimport Projects from \"../pages/projects\";\r\nimport Testimonals from \"../pages/testimonals\";\r\nimport Aboutme from \"../pages/about\";\r\nimport ContactMe from \"../pages/contact\";\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path=\"/homepage\" component={Home} />\r\n    <Route path=\"/projects\" component={Projects} />\r\n    <Route path=\"/testimonals\" component={Testimonals} />\r\n    <Route path=\"/about\" component={Aboutme} />\r\n    <Route path=\"/contact\" component={ContactMe} />\r\n  </Switch>\r\n);\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport { Layout, Header, Navigation, Drawer, Content } from \"react-mdl\";\n\nimport Main from \"./components/pages/main\";\n\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          background: \"cover\",\n          attachment: \"fixed\",\n          position: \"center\",\n        }}\n      >\n        <Layout\n          style={{\n            background:\n              \"url(http://www.getmdl.io/assets/demos/transparent.jpg) center / cover\",\n          }}\n        >\n          <Header transparent title=\"My Portfolio\" scroll>\n            <Navigation>\n              <Link to=\"/homepage\">Home</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/testimonals\">Testimonals</Link>\n              <Link to=\"/about\">About</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Header>\n          <Drawer title=\"Mischa Achmat\">\n            <Navigation>\n              <Link to=\"/homepage\">Home</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/testimonals\">Testimonals</Link>\n              <Link to=\"/about\">About</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\" />\n            <Main />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}